{"version":3,"sources":["components/ProductTable.js","components/AddProductSection.js","components/ProcurementSection.js","App.js","serviceWorker.js","index.js"],"names":["ProductTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","deleteItem","i","axios","delete","then","res","console","log","data","window","location","reload","state","products","_this2","get","setState","_this3","react_default","a","createElement","Segment","Table","celled","padded","Header","Row","HeaderCell","singleLine","Body","map","key","Cell","textAlign","id","title","price","Image","src","picture","size","quantity","className","onClick","React","Component","AddProductSection","handleChange","event","defineProperty","target","name","value","handleSubmit","preventDefault","product","qs","stringify","post","Content-Type","onSubmit","attached","style","marginHorizontal","Input","type","label","onChange","fluid","ProcurementSection","thisProduct","put","App","Container","marginTop","ProductTable_ProductTable","AddProductSection_AddProductSection","ProcurementSection_ProcurementSection","Boolean","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a2feccb5.chunk.js","sourcesContent":["import React from 'react'\nimport { Header, Table, Segment, Image } from 'semantic-ui-react'\nimport axios from 'axios';\n\nexport default class ProductTable extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      products: []\n    }\n  }\n\n  componentDidMount() {\n    axios.get('https://rose-bot-shop.herokuapp.com/apis/products')\n      .then(res => {\n        const products = res.data;\n        this.setState({ products });\n      })\n  }\n\n  deleteItem = (i) => {\n    axios.delete('https://rose-bot-shop.herokuapp.com/apis/product/' + i)\n      .then(res => {\n        console.log(res.data)\n        window.location.reload();\n      })\n  }\n\n  render() {\n    return (\n      <Segment>\n      <h2>Product List</h2>\n      <Table celled padded>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell singleLine>Seq</Table.HeaderCell>\n            <Table.HeaderCell>Product Id</Table.HeaderCell>\n            <Table.HeaderCell>Product Name</Table.HeaderCell>\n            <Table.HeaderCell>Price (Dollar)</Table.HeaderCell>\n            <Table.HeaderCell>Picture</Table.HeaderCell>\n            <Table.HeaderCell>Quantity</Table.HeaderCell>\n            <Table.HeaderCell>Delete</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {\n            this.state.products.map((data, key) => (\n              <Table.Row key={key}>\n                <Table.Cell>\n                  <Header textAlign='center'>{key+1}</Header>\n                </Table.Cell>\n                <Table.Cell singleLine>{data.id}</Table.Cell>\n                <Table.Cell singleLine>{data.title}</Table.Cell>\n                <Table.Cell textAlign='right' singleLine>{\"$\" + data.price}</Table.Cell>\n                <Table.Cell><Image src={data.picture} size='small' /></Table.Cell>\n                <Table.Cell textAlign='right'>{data.quantity}</Table.Cell>\n                <Table.Cell>\n                  <button className=\"ui negative basic button\" onClick={() => {this.deleteItem(data.id)}}>Delete</button>\n                </Table.Cell>\n              </Table.Row>\n            ))\n          }\n        </Table.Body>\n      </Table>\n    </Segment>\n    )\n  }\n}","import React from 'react'\nimport { Input, Segment } from 'semantic-ui-react'\nimport axios from 'axios'\nimport qs from 'qs'\n\nexport default class AddProductSection extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      title: \"\",\n      price: 0,\n      picture: \"\",\n      quantity: 0\n    }\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const product = qs.stringify({\n      title: this.state.title,\n      price: this.state.price,\n      picture: this.state.picture,\n      quantity: this.state.quantity\n    })\n\n    const headers = {\n      'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n    }\n\n    axios.post('https://rose-bot-shop.herokuapp.com/apis/product', product, headers)\n    .then(res => {\n      console.log(res)\n      window.location.reload();\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <form className=\"ui form\" onSubmit={this.handleSubmit}>\n          <Segment attached>\n          <h2>Create New Product</h2>\n            <div style={{marginHorizontal: 20}}>\n              <Input type='text' label='Product Name' name=\"title\" onChange={this.handleChange} fluid />\n              <br/>\n              <Input type='text' label='Price' name=\"price\" onChange={this.handleChange} fluid />\n              <br/>\n              <Input type='text' label='Picture' name=\"picture\" onChange={this.handleChange} fluid />\n              <br/>\n              <Input type='text' label='Initial Quantity' name=\"quantity\" onChange={this.handleChange} fluid />\n            </div>\n            <br/>\n            <button className=\"ui teal fluid button\" type=\"submit\">Create new product</button>\n          </Segment>\n\n        </form>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport { Input, Segment } from 'semantic-ui-react'\nimport axios from 'axios'\nimport qs from 'qs'\n\nexport default class ProcurementSection extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      products: [\n        {\"price\":20,\"picture\":\"https://www.thesun.co.uk/wp-content/uploads/2017/03/fifa-17-2.jpg?strip=all&w=742&quality=100\",\"title\":\"RoseShop\",\"quantity\":10}\n      ],\n      id: 0\n    }\n  }\n\n  componentDidMount() {\n    axios.get('https://rose-bot-shop.herokuapp.com/apis/products')\n      .then(res => {\n        const products = res.data;\n        this.setState({ products })\n        this.setState({id: products[0].id})\n      })\n  }\n\n  handleChange = event => {\n    console.log(event.target)\n    this.setState({ [event.target.name]: event.target.value })\n    console.log(this.state)\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    console.log(this.state)\n\n    let thisProduct = {}\n    axios.get('https://rose-bot-shop.herokuapp.com/apis/products/' + this.state.id)\n    .then(res => {\n      thisProduct = res.data;\n    })\n\n    const product = qs.stringify({\n      title: thisProduct.title,\n      price: thisProduct.price,\n      picture: thisProduct.picture,\n      quantity: this.state.quantity\n    })\n\n    const headers = {\n      'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n    }\n\n    axios.put('https://rose-bot-shop.herokuapp.com/apis/product/' + this.state.id, product, headers)\n    .then(res => {\n      console.log(res)\n      window.location.reload();\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Segment attached>\n          <h2>Procurement Management</h2>\n          <form onSubmit={this.handleSubmit}>\n            <div style={{marginHorizontal: 20}}>\n              <select name=\"id\" value={this.state.id} className=\"ui dropdown fluid\" onChange={this.handleChange}>\n                {\n                    this.state.products.map((data, key) => (\n                      <option value={data.id} key={key}>{data.title}</option>\n                    ))\n                }\n              </select>\n              <br/>\n              <Input type='text' label='Quantity' name='quantity' onChange={this.handleChange} fluid />\n            </div>\n            <br/>\n            <button className=\"ui pink fluid button\" type=\"submit\">Set new quantity to product</button>\n          </form>\n        </Segment>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport ProductTable from './components/ProductTable'\nimport { Container } from 'semantic-ui-react';\nimport AddProductSection from './components/AddProductSection';\nimport ProcurementSection from './components/ProcurementSection';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Container style={{ marginTop: '5em' }}>\n        <center><h1>Rose ChatBot Admin Panel</h1></center>\n        <ProductTable />\n        <div className=\"ui grid\">\n          <div className=\"eight wide column\">\n            <AddProductSection />\n          </div>\n          <div className=\"eight wide column\">\n            <ProcurementSection />\n          </div>\n        </div>\n      </Container>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}